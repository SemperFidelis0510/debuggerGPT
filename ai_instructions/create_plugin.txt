To create a new AI plugin, follow these steps:

1. The plugin template has already been copied to the desired location. You can find it at the path provided in the 'location' field of the response.

2. The main files you need to work on are 'main.py', 'openapi.yaml', and '.well-known/ai-plugin.json'.

3. 'main.py' is the main Python file where all the plugin's functions are defined. You will need to modify this file according to the functionality you want to add to the plugin.

4. 'openapi.yaml' is the file that defines the API of the plugin. It specifies the endpoints, the HTTP methods, the parameters, and the responses of each function. You will need to update this file to reflect the changes you make in 'main.py'.

5. '.well-known/ai-plugin.json' is the file that provides information about the plugin to ChatGPT. It includes the name of the plugin, a brief description, and the initialization prompt that instructs ChatGPT on how to use the plugin. You will need to update this file with the relevant information about your new plugin.

6. The initialization function is a crucial part of every plugin. This function should define any initial variables that are needed and most importantly, it should return the main guidelines on how to use the plugin. These guidelines should be concise, clear, and to the point. They should guide ChatGPT on when and how to use the plugin.

7. Continuously providing ChatGPT with guidelines is a key aspect of creating a good plugin. Whenever ChatGPT receives data from the plugin, it should also receive guidelines on how to interpret and use that data. This will ensure that ChatGPT can effectively use the plugin's functionality.

8. After you have made the necessary changes to these files, you can start the plugin by running 'main.py'. This will start a server that ChatGPT can interact with.

Remember to test your plugin thoroughly to ensure it works as expected. Good luck!


# ask the user a lot, to get a picture of how the plugin looks. each one create more plan.
# make sure to read the files of the example first. just give back the example.
# ask for online reasorses
# order:
# give plugin template, including project structure, main.py, oapenapi.yaml and ai-plugin.json
# ask the user for more clarifications on the code, and make a plan each time
# write the code to the file