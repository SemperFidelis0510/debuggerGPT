openapi: 3.0.1
info:
  title: Debug Plugin
  description: A plugin that allows ChatGPT to access and modify files on your computer for debugging purposes.
  version: 'v1'
servers:
  - url: http://localhost:5003
paths:
  /execute:
    post:
      operationId: execute_command
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/executeCommandRequest'
      responses:
        '200':
          description: Command executed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/executeCommandResponse'
        '400':
          description: Error occurred while executing command
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/executeCommandErrorResponse'
  /run_script:
    post:
      operationId: run_script
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/runScriptRequest'
      responses:
        '200':
          description: Script ran successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runScriptResponse'
        '400':
          description: Error occurred while running script
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runScriptErrorResponse'
  /files/{filename}:
    get:
      operationId: get_file
      parameters:
      - name: filename
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: File content retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getFileResponse'
        '404':
          description: File not found
    post:
      summary: Edit a file
      operationId: edit_file
      parameters:
        -  name: filename
           in: path
           required: true
           schema:
             type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditFileRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /initialize:
    post:
      operationId: initialize_plugin
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/initializePluginRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/initializePluginResponse'
        '400':
          description: Error during initialization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/initializePluginErrorResponse'
  /speak:
    post:
      operationId: speak
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/speakRequest'
      responses:
        '200':
          description: Text spoken successfully
  /memory:
    post:
      operationId: remember
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/rememberRequest'
      responses:
        '200':
          description: Memory updated successfully
  /memory/{key}:
    get:
      operationId: recall
      parameters:
        -  name: key
           in: path
           required: true
           schema:
             type: string
        -  name: all
           in: query
           required: false
           schema:
             type: boolean
      responses:
        '200':
          description: Memory retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/recallResponse'
        '400':
          description: Key not found
  /listen:
    post:
      operationId: listen
      responses:
        '200':
          description: Transcription retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listenResponse'
  /analysis/code:
    get:
      operationId: analyze_code
      parameters:
        -  name: code_path
           in: query
           required: true
           schema:
             type: string
        -  name: scope_level
           in: query
           required: false
           schema:
             type: integer
             default: 2
             description: The level of scope for the code analysis. 1 for basic information, 2 for additional information about classes and comments, 3 for pylint output, cyclomatic complexity, and Halstead metrics.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/analyzeCodeResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /download_file:
    post:
      operationId: download_file
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/downloadFileRequest'
      responses:
        '200':
          description: File downloaded successfully
  /analysis/folder:
    get:
      operationId: analyze_folder
      parameters:
        -  name: folder_path
           in: query
           required: true
           schema:
             type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/analyzeFolderResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
components:
  schemas:
    speakRequest:
      type: object
      required:
      - text
      properties:
        text:
          type: string
          description: The text to speak.
    rememberRequest:
      type: object
      required:
      - key
      - value
      properties:
        key:
          type: string
          description: The key to remember.
        value:
          type: string
          description: The value to remember.
        alias:
          type: boolean
          description: Whether the key is an alias.
    recallResponse:
      type: object
      properties:
        value:
          type: string
          description: The value of the key.
    listenResponse:
      type: object
      properties:
        transcription:
          type: string
          description: The transcription of the audio.
    analyzeCodeRequest:
      type: object
      required:
        - code_path
      properties:
        code_path:
          type: string
          description: The path to the code to analyze.
    analyzeCodeResponse:
      type: object
      properties:
        analysis:
          type: object
          description: The analysis of the code.
        instructions:
          type: string
          description: The instructions for the analysis.
    downloadFileRequest:
      type: object
      required:
      - url
      - local_path
      properties:
        url:
          type: string
          description: The URL of the file to download.
        local_path:
          type: string
          description: The local path where the file will be saved.
    analyzeFolderRequest:
      type: object
      required:
        - folder_path
      properties:
        folder_path:
          type: string
          description: The path to the folder to analyze.
    analyzeFolderResponse:
      type: object
      properties:
        analysis:
          type: object
          description: The analysis of the folder.
        instructions:
          type: string
          description: The instructions for the analysis.
    executeCommandRequest:
      type: object
      required:
      - command
      properties:
        command:
          type: string
          description: The command to execute.
        env_name:
          type: string
          description: The name of the environment (optional).
    executeCommandResponse:
      type: object
      properties:
        output:
          type: string
          description: The output of the command.
    executeCommandErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: The error message.
        output:
          type: string
          description: The output of the command before it failed.
    runScriptRequest:
      type: object
      required:
        - env_name
        - script_path
      properties:
        env_name:
          type: string
          description: The name of the environment.
        script_path:
          type: string
          description: The path to the Python script.
        args:
          type: array
          items:
            type: string
          description: The list of arguments to pass to the script.
    runScriptResponse:
      type: object
      properties:
        output:
          type: string
          description: The output of the script.
    runScriptErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: The error message.
        output:
          type: string
          description: The output of the script before it failed.
    getFileResponse:
      type: object
      properties:
        content:
          type: string
          description: The content of the file.
    modifyFileRequest:
      type: object
      required:
        - fixes
      properties:
        fixes:
          type: array
          items:
            type: object
            required:
              - lines
              - code
              - indentation
            properties:
              lines:
                type: array
                items:
                  type: integer
                minItems: 2
                maxItems: 2
              code:
                type: string
              indentation:
                type: string
    EditFileRequest:
      type: object
      required:
        - fixes
        - method
      properties:
        fixes:
          type: array
          items:
            type: object
            properties:
              lines:
                type: array
                items:
                  type: integer
              code:
                type: string
              indentation:
                type: string
        method:
          type: string
          enum: [ subs, insert, replace ]
          default: subs
    initializePluginResponse:
      type: object
      properties:
        message:
          type: string
          description: The status of the initialization.
        instructions:
          type: string
          description: Detailed instructions on how to use the plugin.
      installPackagesRequest:
        type: object
        properties:
          env_name:
            type: string
            description: The name of the environment. If not specified, defaults to 'debuggerGPT'.
          packages:
            type: array
            items:
              type: string
            description: The list of Python packages to install.
      initializePluginRequest:
        type: object
        properties:
          env_name:
            type: string
            description: The name of the environment to create or use.
    initializePluginRequest:
      type: object
      properties:
        env_name:
          type: string
          description: The name of the environment to create or use.
    installPackagesRequest:
      type: object
      properties:
        env_name:
          type: string
          description: The name of the environment. If not specified, defaults to 'debuggerGPT'.
        packages:
          type: array
          items:
            type: string
          description: The list of Python packages to install.